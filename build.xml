<?xml version="1.0" encoding="UTF-8"?>
<project name="cagf" basedir="." default="run.persistence.export">

	<property file="build.properties"></property>

    <path id="ant.run.lib.path">
        <pathelement path="${classes}"></pathelement>
        <fileset dir="${lib}">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <target name="set.hibernate.mappfiles">
        <fileset id="hebernate.mapping.files" dir="${dbconfig}">
            <include name="**/*.hbm.xml"/>
        </fileset>
    	<!--路径转换　　集合转换未以空格分割的路径-->
    	<pathconvert property="hibernate.mapping" refid="hebernate.mapping.files" pathsep=" "></pathconvert>
    </target>

	<taskdef name="hibernatetool" classname="org.hibernate.tool.ant.HibernateToolTask" classpathref="ant.run.lib.path">
	</taskdef>
	
    <target name="run.persistence.export" depends="set.hibernate.mappfiles">
        <mkdir dir="${classes}"></mkdir>
    	<!--generate beans -->
        <hibernatetool>
            <configuration configurationfile="${dbconfig}/hibernate.cfg.xml"></configuration>
            <hbm2java  destdir="${src}"></hbm2java>
        	<hbm2ddl destdir="${dbschema}" export="false" outputfilename="db.sql"></hbm2ddl>
        </hibernatetool>
    	
    	<!--generate daos -->
    	<java classname="com.cagf.tool.hbm2dao.CodeGenerator" fork="true" failonerror="true">
    		<classpath refid="ant.run.lib.path"></classpath>
    		<arg line="--rootpath=${rootPath}"/><!--模板文件-->
    		<arg line="--output=${src}"/>
    		<arg line="${hibernate.mapping}"/>
    	</java>
    	
    	<!--generate daoimpls -->
    	<java classname="com.cagf.tool.hbm2daoimpl.CodeGenerator" fork="true" failonerror="true">
    		<classpath refid="ant.run.lib.path"></classpath>
    		<arg line="--rootpath=${rootPath}"/><!--模板文件-->
    		<arg line="--output=${src}"/>
    		<arg line="${hibernate.mapping}"/>
    	</java>
    	
    	<!--generate infrastructure -->
    	<java classname="com.cagf.tool.hbm2xml.infrastructure.CodeGenerator" fork="true" failonerror="true">
    		<classpath refid="ant.run.lib.path"></classpath>
    		<arg line="--filename=${infrastructureXmlName}"/><!-- -->
    		<arg line="--output=${springConfigLocation}"/><!--spring 输出位置 -->
    		<arg line="--dbProperty=${dbProperty}"/>
    		<arg line="--hibernateProperty=${hibernateProperty}"/>
    		<arg line="--projectDirectory=${projectDirectory}"/>
    		<arg line="${hibernate.mapping}"/>
		</java>
    	
    	<!--generate spring dao config-->
    	<java classname="com.cagf.tool.hbm2xml.dao.CodeGenerator" fork="true" failonerror="true">
    		<classpath refid="ant.run.lib.path"></classpath>
    		<arg line="--filename=${daoXmlName}"/><!--模板文件-->
    		<arg line="--output=${springConfigLocation}"/>
    		<arg line="--projectDirectory=${projectDirectory}"/>
    		<arg line="${hibernate.mapping}"/>
    	</java>
    	
    	<!-- generate service -->
    	<java classname="com.cagf.tool.hbm2service.CodeGenerator" fork="true" failonerror="true">
    	    		<classpath refid="ant.run.lib.path"></classpath>
    	    		<arg line="--rootpath=${rootPath}"/><!--模板文件-->
    	    		<arg line="--output=${src}"/>
    	    		<arg line="${hibernate.mapping}"/>
    	</java>
    	
    	<!-- generate serviceimpl -->
    	<java classname="com.cagf.tool.hbm2serviceimpl.CodeGenerator" fork="true" failonerror="true">
    	    		<classpath refid="ant.run.lib.path"></classpath>
    	    		<arg line="--rootpath=${rootPath}"/><!--模板文件-->
    	    		<arg line="--output=${src}"/>
    	    		<arg line="${hibernate.mapping}"/>
    	</java>
    	
    	<!--generate spring service config-->
    	<java classname="com.cagf.tool.hbm2xml.service.CodeGenerator" fork="true" failonerror="true">
    		<classpath refid="ant.run.lib.path"></classpath>
    		<arg line="--filename=${serviceXmlName}"/><!--模板文件-->
    		<arg line="--output=${springConfigLocation}"/>
    		<arg line="--projectDirectory=${projectDirectory}"/>
    		<arg line="${hibernate.mapping}"/>
    	</java>
    	
    	<!-- do compile -->
    	<!-- action中用到反射，需要获取到Class-->
		<javac srcdir="${src}" destdir="${classes}" nowarn="on" debug="${java.debug}" 
			classpathref="ant.run.lib.path">
		</javac>
    	
    	<!-- generate action -->
    	<java classname="com.cagf.tool.hbm2action.CodeGenerator" fork="true" failonerror="true">
    	    		<classpath refid="ant.run.lib.path"></classpath>
    	    		<arg line="--rootpath=${rootPath}"/><!--模板文件-->
    	    		<arg line="--output=${src}"/>
    	    		<arg line="${hibernate.mapping}"/>
    	</java>
    	
		<!-- generating spring action config -->
		<java classname="com.cagf.tool.hbm2xml.action.CodeGenerator" fork="true" failonerror="true">
			<classpath refid="ant.run.lib.path"></classpath>
			<arg line="--output=${springConfigLocation}"/>
			<arg line="--filename=${actionXmlName}"/>
			<arg line="--projectDirectory=${projectDirectory}"/>
			<arg line="${hibernate.mapping}"/>
		</java>	
    	
		<!-- generating struts.xml -->
		<java classname="com.cagf.tool.hbm2xml.struts.CodeGenerator" fork="true" failonerror="true">
			<classpath refid="ant.run.lib.path"></classpath>
			<arg line="--output=${src}"/>
			<arg line="--filename=${strutsXmlName}"/>
			<arg line="--projectDirectory=${projectDirectory}"/>
			<arg line="${hibernate.mapping}"/>
		</java>
    	
    	<java classname="com.cagf.tool.hbm2jsp.CodeGenerator" fork="true" failonerror="true">
			<classpath refid="ant.run.lib.path"></classpath>
			<arg line="--output=${projectDirectory}/${web}"/>
			<arg line="--rootpath=${rootPath}"/>
			<arg line="${hibernate.mapping}"/>
		</java>
    	
    	<javac srcdir="${src}" destdir="${classes}" nowarn="on" debug="${java.debug}" 
    				classpathref="ant.run.lib.path">
		</javac>
    </target>


</project>